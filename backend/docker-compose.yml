version: '3.9'

# Use 'root' with empty credentials
services:
  mysql-inmem:
    image: mysql:8
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: true
    ports:
      - 3306:3306

  # Use root/password and username/password as credentials
  mysql:
    image: mysql:8
    command: mysqld --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_USER: username
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
    ports:
      - 3306:3306
    volumes:
      - $PWD/mysql-data:/var/lib/mysql

  # Use username/password as credentials
  postgres:
    image: postgres:15
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb

  # Use 'password' as password
  redis:
    image: redis:7
    command: redis-server --requirepass password
    ports:
     - 6379:6379

  # Use root/root as credentials
  mongo:
    image: mongo:4.4
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
  
  # Use guest/guest as credentials
  rabbit:
    image: rabbitmq:management
    command: sh -c "rabbitmq-plugins enable rabbitmq_management; echo '[{rabbit, [{loopback_users, [] }]}].' > /etc/rabbitmq/rabbitmq.config; rabbitmq-server"
    ports:
      - 15672:15672
      - 5672:5672
      - 5671:5671
      - 4369:4369
  
  vault:
    image: vault:1.12.3
    ports:
      - 8200:8200/tcp
    environment:
      - VAULT_ADDR=${VAULT_ADDR}
      - VAULT_API_ADDR=${VAULT_ADDR}
      - VAULT_ADDRESS=${VAULT_ADDR}
    cap_add:
      - IPC_LOCK
    healthcheck:
      retries: 5
    volumes:
      - $PWD/vault-data/config:/vault/config
      - $PWD/vault-data/file:/vault/file
      - $PWD/vault.json:/vault/config/vault.json
    command: vault server -config=/vault/config/vault.json

  jenkins:
    image: jenkins/jenkins:lts
    privileged: true
    user: root
    ports:
      - 8085:8080
      - 50000:50000
    container_name: jenkins
    volumes:
      - $PWD/jenkins-data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/local/bin/docker
  devmail:
    image: djfarrelly/maildev
    ports:
      - 1080:80
      - 1025:25
    container_name: maildev

  artifactory:
    image: docker.bintray.io/jfrog/artifactory-jcr:7.7.3
    container_name: artifactory
    environment:
     - JF_ROUTER_ENTRYPOINTS_EXTERNALPORT=8882
    ports:
     - 8882:8082 # for router communication
     - 8881:8081 # for artifactory communication
    volumes:
     - $PWD/jfrog-data/artifactory/data/var:/var/opt/jfrog/artifactory
     - /etc/localtime:/etc/localtime:ro
    restart: always
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "10"
    ulimits:
      nproc: 65535
      nofile:
        soft: 32000
        hard: 40000

volumes:
  mysql-data: